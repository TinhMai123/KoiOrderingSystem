@page
@model KoiOrderingSystem_Web.Pages.Customer.Orders.DetailsModel

@{
    ViewData["Title"] = "Order Details";
}

<h1>Order Details</h1>

<div>
    <h4>Order Summary</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">Order ID</dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.OrderKoiId)
        </dd>

        <dt class="col-sm-2">Total Amount</dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.TotalAmount)
        </dd>

        <dt class="col-sm-2">Status</dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Status)
        </dd>

        <dt class="col-sm-2">Order Date</dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.CreatedDate)
        </dd>

        <dt class="col-sm-2">Last Updated</dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.UpdatedDate)
        </dd>

        <dt class="col-sm-2">Shipping Address</dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.ShippingAddress)
        </dd>

        <!-- Optional: Itemized List of Ordered Items -->
@*         @if (Model.Order.Items != null && Model.Order.Items.Any())
        {
            <dt class="col-sm-2">Items</dt>
            <dd class="col-sm-10">
                <ul>
                    @foreach (var item in Model.Order.Items)
                    {
                        <li>@item.ProductName - Quantity: @item.Quantity - Price: @item.Price</li>
                    }
                </ul>
            </dd>
        } *@
    </dl>
</div>
<div>
    <a asp-page="./Index">Back to List</a>
</div>
