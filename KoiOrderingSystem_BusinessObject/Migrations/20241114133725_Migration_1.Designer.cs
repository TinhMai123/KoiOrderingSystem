// <auto-generated />
using System;
using KoiOrderingSystem_BusinessObject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoiOrderingSystem_BusinessObject.Migrations
{
    [DbContext(typeof(KoiOrderingSystemContext))]
    [Migration("20241114133725_Migration_1")]
    partial class Migration_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("ExchangeRate")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstablishedYear")
                        .HasColumnType("int");

                    b.Property<string>("FarmName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Farms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3466),
                            Description = "A tranquil farm specializing in high-quality koi fish.",
                            EstablishedYear = 2005,
                            FarmName = "Serenity Koi Farm",
                            IsDeleted = false,
                            Location = "Kyoto",
                            ManagerId = 2,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3467)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3469),
                            Description = "Known for its vibrant and colorful koi varieties.",
                            EstablishedYear = 2010,
                            FarmName = "Golden Pond Koi Farm",
                            IsDeleted = false,
                            Location = "Osaka",
                            ManagerId = 2,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3469)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3471),
                            Description = "A family-owned farm with a rich history in koi breeding.",
                            EstablishedYear = 2000,
                            FarmName = "Harmony Koi Farm",
                            IsDeleted = false,
                            Location = "Tokyo",
                            ManagerId = 2,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3472)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3473),
                            Description = "Specializes in rare koi breeds and sustainable farming practices.",
                            EstablishedYear = 2015,
                            FarmName = "Lotus Koi Farm",
                            IsDeleted = false,
                            Location = "Hiroshima",
                            ManagerId = 2,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3473)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3475),
                            Description = "Offers a serene environment and expert koi care.",
                            EstablishedYear = 2018,
                            FarmName = "Peaceful Waters Koi Farm",
                            IsDeleted = false,
                            Location = "Nara",
                            ManagerId = 2,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3475)
                        });
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.FarmKoiType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KoiTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("KoiTypeId");

                    b.ToTable("FarmKoiTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3485),
                            FarmId = 1,
                            IsDeleted = false,
                            KoiTypeId = 1,
                            Price = 20.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3486)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3488),
                            FarmId = 1,
                            IsDeleted = false,
                            KoiTypeId = 2,
                            Price = 25.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3489)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3490),
                            FarmId = 1,
                            IsDeleted = false,
                            KoiTypeId = 3,
                            Price = 30.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3490)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3491),
                            FarmId = 1,
                            IsDeleted = false,
                            KoiTypeId = 4,
                            Price = 35.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3491)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3492),
                            FarmId = 1,
                            IsDeleted = false,
                            KoiTypeId = 5,
                            Price = 40.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3492)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3493),
                            FarmId = 2,
                            IsDeleted = false,
                            KoiTypeId = 1,
                            Price = 22.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3493)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3494),
                            FarmId = 2,
                            IsDeleted = false,
                            KoiTypeId = 2,
                            Price = 27.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3494)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3495),
                            FarmId = 2,
                            IsDeleted = false,
                            KoiTypeId = 3,
                            Price = 32.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3495)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3496),
                            FarmId = 2,
                            IsDeleted = false,
                            KoiTypeId = 4,
                            Price = 37.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3496)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3497),
                            FarmId = 2,
                            IsDeleted = false,
                            KoiTypeId = 5,
                            Price = 42.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3497)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3498),
                            FarmId = 3,
                            IsDeleted = false,
                            KoiTypeId = 1,
                            Price = 24.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3498)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3519),
                            FarmId = 3,
                            IsDeleted = false,
                            KoiTypeId = 2,
                            Price = 29.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3521)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3522),
                            FarmId = 3,
                            IsDeleted = false,
                            KoiTypeId = 3,
                            Price = 34.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3522)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3523),
                            FarmId = 3,
                            IsDeleted = false,
                            KoiTypeId = 4,
                            Price = 39.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3523)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3524),
                            FarmId = 3,
                            IsDeleted = false,
                            KoiTypeId = 5,
                            Price = 44.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3524)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3525),
                            FarmId = 4,
                            IsDeleted = false,
                            KoiTypeId = 1,
                            Price = 26.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3525)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3526),
                            FarmId = 4,
                            IsDeleted = false,
                            KoiTypeId = 2,
                            Price = 31.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3526)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3527),
                            FarmId = 4,
                            IsDeleted = false,
                            KoiTypeId = 3,
                            Price = 36.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3528)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3528),
                            FarmId = 4,
                            IsDeleted = false,
                            KoiTypeId = 4,
                            Price = 41.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3529)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3529),
                            FarmId = 4,
                            IsDeleted = false,
                            KoiTypeId = 5,
                            Price = 46.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3530)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3530),
                            FarmId = 5,
                            IsDeleted = false,
                            KoiTypeId = 1,
                            Price = 28.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3531)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3531),
                            FarmId = 5,
                            IsDeleted = false,
                            KoiTypeId = 2,
                            Price = 33.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3532)
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3532),
                            FarmId = 5,
                            IsDeleted = false,
                            KoiTypeId = 3,
                            Price = 38.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3533)
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3533),
                            FarmId = 5,
                            IsDeleted = false,
                            KoiTypeId = 4,
                            Price = 43.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3534)
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3534),
                            FarmId = 5,
                            IsDeleted = false,
                            KoiTypeId = 5,
                            Price = 48.00m,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3535)
                        });
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Koi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("HealthStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KoiTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("KoiTypeId");

                    b.ToTable("Kois");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2021, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3427),
                            DateAdded = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3425),
                            Description = "Bright orange koi with white spots.",
                            FarmId = 1,
                            HealthStatus = "Healthy",
                            IsDeleted = false,
                            KoiTypeId = 1,
                            Picture = "https://hanoverkoifarms.com/wp-content/uploads/2017/01/great-kohaku-739x1024.jpg",
                            Status = true,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3427),
                            Weight = 2.3f
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2020, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3433),
                            DateAdded = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3432),
                            Description = "Black and white koi with a smooth pattern.",
                            FarmId = 1,
                            HealthStatus = "Healthy",
                            IsDeleted = false,
                            KoiTypeId = 2,
                            Picture = "https://hanoverkoifarms.com/wp-content/uploads/2017/01/great-kohaku-739x1024.jpg",
                            Status = true,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3433),
                            Weight = 3.1f
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3436),
                            DateAdded = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3436),
                            Description = "Golden koi with a shiny coat.",
                            FarmId = 1,
                            HealthStatus = "Under observation",
                            IsDeleted = false,
                            KoiTypeId = 3,
                            Picture = "https://hanoverkoifarms.com/wp-content/uploads/2017/01/great-kohaku-739x1024.jpg",
                            Status = true,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3436),
                            Weight = 2.8f
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2022, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3438),
                            DateAdded = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3438),
                            Description = "Small blue and orange koi.",
                            FarmId = 1,
                            HealthStatus = "Healthy",
                            IsDeleted = false,
                            KoiTypeId = 4,
                            Picture = "https://hanoverkoifarms.com/wp-content/uploads/2017/01/great-kohaku-739x1024.jpg",
                            Status = true,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3439),
                            Weight = 1.9f
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2019, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3440),
                            DateAdded = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3440),
                            Description = "Large white koi with orange spots.",
                            FarmId = 1,
                            HealthStatus = "Healthy",
                            IsDeleted = false,
                            KoiTypeId = 5,
                            Picture = "https://hanoverkoifarms.com/wp-content/uploads/2017/01/great-kohaku-739x1024.jpg",
                            Status = false,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3441),
                            Weight = 4.2f
                        });
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiByBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KoiTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KoiTypeId");

                    b.ToTable("KoiByBatches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3449),
                            IsDeleted = false,
                            KoiTypeId = 1,
                            Price = 100.00m,
                            Quantity = 10,
                            Size = 5,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3450)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3453),
                            IsDeleted = false,
                            KoiTypeId = 2,
                            Price = 150.00m,
                            Quantity = 15,
                            Size = 6,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3454)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3455),
                            IsDeleted = false,
                            KoiTypeId = 3,
                            Price = 80.00m,
                            Quantity = 8,
                            Size = 4,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3455)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3456),
                            IsDeleted = false,
                            KoiTypeId = 4,
                            Price = 120.00m,
                            Quantity = 12,
                            Size = 7,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3457)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3457),
                            IsDeleted = false,
                            KoiTypeId = 5,
                            Price = 200.00m,
                            Quantity = 20,
                            Size = 10,
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3458)
                        });
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShippingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("KoiOrders");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KoiByBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("KoiId")
                        .HasColumnType("int");

                    b.Property<int>("KoiOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KoiByBatchId")
                        .IsUnique()
                        .HasFilter("[KoiByBatchId] IS NOT NULL");

                    b.HasIndex("KoiId");

                    b.HasIndex("KoiOrderId");

                    b.ToTable("KoiOrderDetails");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBatch")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEndangered")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KoiTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3407),
                            IsBatch = true,
                            IsDeleted = false,
                            IsEndangered = false,
                            Name = "Kohaku",
                            Picture = "https://hanoverkoifarms.com/wp-content/uploads/2017/01/great-kohaku-739x1024.jpg",
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3407)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3410),
                            IsBatch = true,
                            IsDeleted = false,
                            IsEndangered = false,
                            Name = "Taisho Sanke",
                            Picture = "https://thucancakoihikari.com/wp-content/uploads/2024/04/koi-taisho-sanke-1.jpg",
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3411)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3412),
                            IsBatch = false,
                            IsDeleted = false,
                            IsEndangered = true,
                            Name = "Showa Sanshoku",
                            Picture = "https://cakoibienhoa.com/public/userfiles/products/ca-koi-showa-sanshoku-thumb.jpg",
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3413)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3414),
                            IsBatch = true,
                            IsDeleted = false,
                            IsEndangered = false,
                            Name = "Shusui",
                            Picture = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT2qwYKPpE9yJJKYJ_npVzr3WzWvybWZK8-fQ&s",
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3414)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3415),
                            IsBatch = false,
                            IsDeleted = false,
                            IsEndangered = true,
                            Name = "Asagi",
                            Picture = "https://hanoverkoifarms.com/wp-content/uploads/2017/01/best-asagi.jpg",
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3415)
                        });
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InsuranceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KoiOderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InsuranceId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.OrderTrip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ConsultantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TripEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TripStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConsultantId");

                    b.HasIndex("FarmId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderTrips");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("ApprovalStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuoteAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SalesStaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("SalesStaffId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Maple St, Springfield, IL",
                            Avatar = "avatars/alice.jpg",
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3297),
                            Email = "admin@gmail.com",
                            FullName = "Admin Johnson",
                            IsDeleted = false,
                            Password = "123456",
                            PhoneNumber = "123-456-7890",
                            Role = "Admin",
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3304)
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak St, Springfield, IL",
                            Avatar = "avatars/bob.jpg",
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3309),
                            Email = "manager@gmail.com",
                            FullName = "Manager Smith",
                            IsDeleted = false,
                            Password = "securepass",
                            PhoneNumber = "234-567-8901",
                            Role = "Manager",
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3310)
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine St, Springfield, IL",
                            Avatar = "avatars/charlie.jpg",
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3312),
                            Email = "staff@gmail.com",
                            FullName = "Staff Brown",
                            IsDeleted = false,
                            Password = "mypassword",
                            PhoneNumber = "345-678-9012",
                            Role = "Staff",
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3312)
                        },
                        new
                        {
                            Id = 4,
                            Address = "321 Cedar St, Springfield, IL",
                            Avatar = "avatars/diana.jpg",
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3314),
                            Email = "customer@gmail.com",
                            FullName = "Customer Prince",
                            IsDeleted = false,
                            Password = "123456",
                            PhoneNumber = "456-789-0123",
                            Role = "Customer",
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3314)
                        },
                        new
                        {
                            Id = 5,
                            Address = "654 Birch St, Springfield, IL",
                            Avatar = "avatars/ethan.jpg",
                            CreatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3316),
                            Email = "ethan.hunt@example.com",
                            FullName = "Ethan Hunt",
                            IsDeleted = false,
                            Password = "missionimpossible",
                            PhoneNumber = "567-890-1234",
                            Role = "Staff",
                            UpdatedAt = new DateTime(2024, 11, 14, 20, 37, 25, 645, DateTimeKind.Local).AddTicks(3316)
                        });
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Farm", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.User", "Manager")
                        .WithMany("Farms")
                        .HasForeignKey("ManagerId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.FarmKoiType", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.Farm", "Farm")
                        .WithMany("FarmKoiTypes")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiOrderingSystem_BusinessObject.KoiType", "KoiType")
                        .WithMany("FarmKoiTypes")
                        .HasForeignKey("KoiTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");

                    b.Navigation("KoiType");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Feedback", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Koi", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.Farm", "Farm")
                        .WithMany("Kois")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiOrderingSystem_BusinessObject.KoiType", "KoiType")
                        .WithMany("Kois")
                        .HasForeignKey("KoiTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Farm");

                    b.Navigation("KoiType");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiByBatch", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.KoiType", "KoiType")
                        .WithMany()
                        .HasForeignKey("KoiTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KoiType");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiOrder", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.Order", "Order")
                        .WithMany("KoiOders")
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiOrderDetail", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.KoiByBatch", "KoiByBatch")
                        .WithOne("OrderDetailKoi")
                        .HasForeignKey("KoiOrderingSystem_BusinessObject.KoiOrderDetail", "KoiByBatchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KoiOrderingSystem_BusinessObject.Koi", "Koi")
                        .WithMany("OrderDetailKois")
                        .HasForeignKey("KoiId");

                    b.HasOne("KoiOrderingSystem_BusinessObject.KoiOrder", "KoiOrder")
                        .WithMany("KoiOrderDetails")
                        .HasForeignKey("KoiOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Koi");

                    b.Navigation("KoiByBatch");

                    b.Navigation("KoiOrder");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Order", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.User", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiOrderingSystem_BusinessObject.Insurance", null)
                        .WithMany("Orders")
                        .HasForeignKey("InsuranceId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.OrderTrip", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.User", "Consultant")
                        .WithMany("OrderTrips")
                        .HasForeignKey("ConsultantId");

                    b.HasOne("KoiOrderingSystem_BusinessObject.Farm", "Farm")
                        .WithMany("OrderTrips")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiOrderingSystem_BusinessObject.Order", "Order")
                        .WithMany("Trips")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consultant");

                    b.Navigation("Farm");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Payment", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.Currency", "Currency")
                        .WithMany("Payments")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiOrderingSystem_BusinessObject.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Quote", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.Order", "Order")
                        .WithMany("Quotes")
                        .HasForeignKey("OrderId");

                    b.HasOne("KoiOrderingSystem_BusinessObject.User", "SalesStaff")
                        .WithMany()
                        .HasForeignKey("SalesStaffId");

                    b.Navigation("Order");

                    b.Navigation("SalesStaff");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Currency", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Farm", b =>
                {
                    b.Navigation("FarmKoiTypes");

                    b.Navigation("Kois");

                    b.Navigation("OrderTrips");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Insurance", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Koi", b =>
                {
                    b.Navigation("OrderDetailKois");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiByBatch", b =>
                {
                    b.Navigation("OrderDetailKoi");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiOrder", b =>
                {
                    b.Navigation("KoiOrderDetails");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiType", b =>
                {
                    b.Navigation("FarmKoiTypes");

                    b.Navigation("Kois");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Order", b =>
                {
                    b.Navigation("KoiOders");

                    b.Navigation("Payments");

                    b.Navigation("Quotes");

                    b.Navigation("Trips");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.User", b =>
                {
                    b.Navigation("Farms");

                    b.Navigation("OrderTrips");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
