// <auto-generated />
using System;
using KoiOrderingSystem_BusinessObject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoiOrderingSystem_BusinessObject.Migrations
{
    [DbContext(typeof(KoiOrderingSystemContext))]
    [Migration("20241012031846_migration_1")]
    partial class migration_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("ExchangeRate")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstablishedYear")
                        .HasColumnType("int");

                    b.Property<string>("FarmName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Farms");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.FarmKoiType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KoiTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("KoiTypeId");

                    b.ToTable("FarmKoiTypes");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Koi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("HealthStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KoiTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderDetailKoiId")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("KoiTypeId");

                    b.ToTable("Kois");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiByBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KoiTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderDetailKoiId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KoiTypeId");

                    b.ToTable("KoiByBatches");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsBatch")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEndangered")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KoiTypes");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InsuranceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderKoiId")
                        .HasColumnType("int");

                    b.Property<string>("ShippingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InsuranceId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.OrderDetailKoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KoiByBatchId")
                        .HasColumnType("int");

                    b.Property<int?>("KoiId")
                        .HasColumnType("int");

                    b.Property<int>("OrderKoiId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isValid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("KoiByBatchId")
                        .IsUnique()
                        .HasFilter("[KoiByBatchId] IS NOT NULL");

                    b.HasIndex("KoiId")
                        .IsUnique()
                        .HasFilter("[KoiId] IS NOT NULL");

                    b.HasIndex("OrderKoiId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.OrderKoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShippingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderKois");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.OrderTrip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ConsultantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TripEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TripStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConsultantId");

                    b.HasIndex("FarmId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderTrips");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrencyId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId1")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentId");

                    b.HasIndex("CurrencyId1");

                    b.HasIndex("OrderId1");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex("FarmId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Farm", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.FarmKoiType", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.Farm", "Farm")
                        .WithMany("FarmKoiTypes")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiOrderingSystem_BusinessObject.KoiType", "KoiType")
                        .WithMany("FarmKoiTypes")
                        .HasForeignKey("KoiTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");

                    b.Navigation("KoiType");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Feedback", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Koi", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.Farm", null)
                        .WithMany("Kois")
                        .HasForeignKey("FarmId");

                    b.HasOne("KoiOrderingSystem_BusinessObject.KoiType", "KoiType")
                        .WithMany("Kois")
                        .HasForeignKey("KoiTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KoiType");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiByBatch", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.KoiType", "KoiType")
                        .WithMany()
                        .HasForeignKey("KoiTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KoiType");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Order", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.User", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.HasOne("KoiOrderingSystem_BusinessObject.Insurance", null)
                        .WithMany("Orders")
                        .HasForeignKey("InsuranceId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.OrderDetailKoi", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.KoiByBatch", "KoiByBatch")
                        .WithOne("OrderDetailKoi")
                        .HasForeignKey("KoiOrderingSystem_BusinessObject.OrderDetailKoi", "KoiByBatchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KoiOrderingSystem_BusinessObject.Koi", "Koi")
                        .WithOne("OrderDetailKoi")
                        .HasForeignKey("KoiOrderingSystem_BusinessObject.OrderDetailKoi", "KoiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KoiOrderingSystem_BusinessObject.OrderKoi", "OrderKoi")
                        .WithMany("OrderDetailKois")
                        .HasForeignKey("OrderKoiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Koi");

                    b.Navigation("KoiByBatch");

                    b.Navigation("OrderKoi");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.OrderKoi", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.Order", "Order")
                        .WithMany("OrderKois")
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.OrderTrip", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.User", "Consultant")
                        .WithMany("OrderTrips")
                        .HasForeignKey("ConsultantId");

                    b.HasOne("KoiOrderingSystem_BusinessObject.Farm", "Farm")
                        .WithMany("OrderTrips")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KoiOrderingSystem_BusinessObject.Order", "Order")
                        .WithMany("Trips")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consultant");

                    b.Navigation("Farm");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Payment", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.Currency", "Currency")
                        .WithMany("Payments")
                        .HasForeignKey("CurrencyId1");

                    b.HasOne("KoiOrderingSystem_BusinessObject.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId1");

                    b.Navigation("Currency");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.User", b =>
                {
                    b.HasOne("KoiOrderingSystem_BusinessObject.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Currency", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Farm", b =>
                {
                    b.Navigation("FarmKoiTypes");

                    b.Navigation("Kois");

                    b.Navigation("OrderTrips");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Insurance", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Koi", b =>
                {
                    b.Navigation("OrderDetailKoi");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiByBatch", b =>
                {
                    b.Navigation("OrderDetailKoi");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.KoiType", b =>
                {
                    b.Navigation("FarmKoiTypes");

                    b.Navigation("Kois");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.Order", b =>
                {
                    b.Navigation("OrderKois");

                    b.Navigation("Payments");

                    b.Navigation("Trips");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.OrderKoi", b =>
                {
                    b.Navigation("OrderDetailKois");
                });

            modelBuilder.Entity("KoiOrderingSystem_BusinessObject.User", b =>
                {
                    b.Navigation("OrderTrips");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
